version: 2

jobs:
  test:
    docker:
      - image: node:18-alpine
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-deps-{{ checksum "package.json" }}-{{ checksum "./bids-validator/package.json" }}-{{ checksum "./bids-validator-web/package.json" }}-v1
      - run: apk --no-cache add git
      - run: npm install -g npm@^7
      - run: npm install
      - run:
          name: Eslint
          command: npm run lint
      - run:
          name: Get bids-examples data
          command: git submodule update --init
      - run:
          # must include separating --, see https://stackoverflow.com/a/14404223/5201771
          name: Jest tests
          command: npm run coverage -- --maxWorkers=2 --testTimeout=10000
      - run:
          name: Upload to codecov
          command: npm run codecov
      - run:
          name: Smoke tests
          command: |
            bids-validator/bin/bids-validator bids-validator/tests/data/valid_headers/ --ignoreNiftiHeaders
            bids-validator/bin/bids-validator bids-validator/tests/data/valid_headers/ --ignoreNiftiHeaders --json
  test_docker:
    environment:
      IMAGE_NAME: bids/validator
    machine:
      # Ubuntu 20.04, Docker v20.10.11, Docker Compose v1.29.2
      # see: https://circleci.com/docs/2.0/configuration-reference/#available-machine-images
      image: ubuntu-2004:202111-02
    steps:
      - checkout
      - run: docker build -t $IMAGE_NAME:latest .
      - run:
          name: Smoke tests
          command: |
            docker run --rm -it -v $PWD/bids-validator/tests/data/valid_headers:/data bids/validator:latest /data --ignoreNiftiHeaders
            docker run --rm -it -v $PWD/bids-validator/tests/data/valid_headers:/data bids/validator:latest /data --ignoreNiftiHeaders --json
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  githubPagesTest:
    docker:
      - image: node:18-alpine
    steps:
      - run: npm install --global npm
      - run: apk --no-cache add ca-certificates git openssh-client rsync
      - checkout
      - restore_cache:
          keys:
            - npm-deps-{{ checksum "package.json" }}-{{ checksum "./bids-validator/package.json" }}-{{ checksum "./bids-validator-web/package.json" }}-v1
      - run:
          name: Install bids-validator and bids-validator-web dependencies
          command: npm install
      - run:
          name: Build and export web-validator
          command: npm run web-export && rsync -av ./bids-validator-web/out/ ~/web_version
      - save_cache:
          key: npm-deps-{{ checksum "package.json" }}-{{ checksum "./bids-validator/package.json" }}-{{ checksum "./bids-validator-web/package.json" }}-v1
          paths:
            - ./node_modules
            - ./.next/cache
      - store_artifacts:
          path: ~/web_version
  gh-pages_deployment:
    docker:
      - image: node:18-alpine
    steps:
      - run: npm install --global npm
      - run: apk --no-cache add ca-certificates git openssh-client
      - add_ssh_keys:
          fingerprints:
            - '86:74:77:4c:90:02:f4:5d:b4:f8:3c:b4:37:c3:c0:25'
      - checkout
      - restore_cache:
          keys:
            - npm-deps-{{ checksum "package.json" }}-{{ checksum "./bids-validator/package.json" }}-{{ checksum "./bids-validator-web/package.json" }}-v1
      - run: git config --global user.email "bids.maintenance@gmail.com"
      - run: git config --global user.name "bids-maintenance"
      - run: ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Create new gh-pages branch without history
          command: git checkout --orphan gh-pages
      - run:
          name: Install bids-validator and bids-validator-web dependencies
          command: npm install
      - run:
          name: Build and export web-validator
          command: npm run web-export
      - run:
          name: Clean and remove bids-validator files
          command: git reset . && git clean --force -d --exclude bids-validator-web/out
      - run:
          name: Move build into legacy directory
          command: mv bids-validator-web/out/ legacy
      - run:
          name: Remove files not related to build
          command: rm -r bids-validator bids-validator-web node_modules
      - run:
          name: Create a nojekyll file (gh-pages specific)
          command: touch .nojekyll
      - run: git status
      - run:
          name: Commit updates
          command: git add legacy && git commit --allow-empty --no-verify -m "Circle CI - Generate validator demo with version $CIRCLE_TAG [ci skip]"
      - run: git push origin gh-pages -f
      - save_cache:
          key: npm-deps-{{ checksum "package.json" }}-{{ checksum "./bids-validator/package.json" }}-{{ checksum "./bids-validator-web/package.json" }}-v1
          paths:
            - ./node_modules
      - store_artifacts:
          path: ~/legacy
workflows:
  version: 2
  build-deploy:
    jobs:
      - test:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - test_docker:
          filters:
            tags:
              only: /.*/
      - githubPagesTest:
          requires:
            - test
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - gh-pages_deployment:
          requires:
            - test
            - test_docker
            - githubPagesTest
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v\d+\.\d+\.\d+$/
